// ================================
// üîê User & Role
// ================================

/** Danh s√°ch vai tr√≤ c·ªßa ng∆∞·ªùi d√πng trong h·ªá th·ªëng */
export type UserRole = "guest" | "driver" | "manager" | "admin";

/** Th√¥ng tin ng∆∞·ªùi d√πng */
export interface User {
  id: string;
  name: string;
  role: UserRole;
  phone: string;
  email?: string;
  createdAt: string;
}

// ================================
// üöó Vehicle & Maintenance
// ================================

/** Lo·∫°i ph∆∞∆°ng ti·ªán ƒë∆∞·ª£c h·ªó tr·ª£ */
export type VehicleType = "motorbike" | "car" | "truck" | "van" | "scooter";

/** L·ªãch b·∫£o d∆∞·ª°ng c·ªßa xe */
export interface MaintenanceSchedule {
  oilChange?: MaintenanceItem;
  coolant?: MaintenanceItem;
  brakes?: MaintenanceItem;
  tires?: MaintenanceItem;
}

/** M·ª•c b·∫£o d∆∞·ª°ng ri√™ng l·∫ª (nh·ªõ qu√£ng ƒë∆∞·ªùng & ng√†y g·∫ßn nh·∫•t) */
export interface MaintenanceItem {
  intervalKm: number;
  lastServiceKm: number;
  lastServiceDate: string;
}

/** Th√¥ng tin ph∆∞∆°ng ti·ªán */
export interface Vehicle {
  id: string;
  ownerId: string;
  brand: string;
  make: string;
  model: string;
  year: number;
  vehicleType: VehicleType;
  licensePlate?: string;
  color?: string;
  photo?: string;
  engineSize?: string;
  mileage?: number;
  maintenanceSchedule: MaintenanceSchedule;
  createdAt: string;
  updatedAt: string;
}

// ================================
// üßæ Trip & Expenses
// ================================

/** Lo·∫°i chuy·∫øn ƒëi ho·∫∑c chi ph√≠ ph√°t sinh */
export type TripType = "maintenance" | "fuel" | "repair" | "other";

/** D·ªØ li·ªáu chi ti·∫øt h√≥a ƒë∆°n ƒë∆∞·ª£c OCR tr√≠ch xu·∫•t */
export interface OCRData {
  vendor?: string;
  date?: string;
  items?: Array<{
    name: string;
    quantity: number;
    price: number;
  }>;
  total?: number;
}

/** Ghi nh·∫≠n 1 chuy·∫øn ƒëi ho·∫∑c chi ph√≠ */
export interface Trip {
  id: string;
  vehicleId: string;
  driverId: string;
  type: TripType;
  amount: number;
  description?: string;
  receiptUrl?: string;
  ocrParsed?: OCRData;
  createdAt: string;
}

// ================================
// ‚è∞ Reminder System
// ================================

/** Lo·∫°i nh·∫Øc nh·ªü */
export type ReminderType = "oil" | "coolant" | "brakes" | "tires" | "inspection";

/** Tr·∫°ng th√°i nh·∫Øc nh·ªü */
export type ReminderStatus = "pending" | "sent" | "acknowledged" | "completed" | "dismissed";

/** Th√¥ng tin nh·∫Øc nh·ªü b·∫£o d∆∞·ª°ng */
export interface Reminder {
  id: string;
  vehicleId: string;
  type: ReminderType;
  dueDate: string;
  status: ReminderStatus;
  message: string;
  sentAt?: string;
  acknowledgedAt?: string;
}

// ================================
// üì§ Export History
// ================================

/** Th√¥ng tin file xu·∫•t b√°o c√°o */
export interface Export {
  id: string;
  managerId: string;
  fileUrl: string;
  params: {
    startDate?: string;
    endDate?: string;
    vehicleIds?: string[];
    type?: string;
  };
  createdAt: string;
}

// ================================
// üõ¢Ô∏è Lubricant Recommendation
// ================================

/** G·ª£i √Ω d·∫ßu nh·ªõt ph√π h·ª£p cho xe */
export interface LubricantRecommendation {
  id: string;
  vehicleId: string;
  productName: string;
  productType: string;
  viscosity: string;
  brand: string;
  price: number;
  reason: string;
  createdAt: string;
}

// ================================
// üè∑Ô∏è Vehicle Brand & Model
// ================================

export interface VehicleModel {
  id: string;
  name: string;
  photo: string;
  year: number;
  type: VehicleType;
}

/** H√£ng xe v√† danh s√°ch model */
export interface VehicleBrand {
  id: string;
  name: string;
  logo: string;
  vehicleTypes: VehicleType[];
  models: VehicleModel[];
}
